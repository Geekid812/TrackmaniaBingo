// This file is automatically @generated by the `typegen` tool.
// Do not manually edit it! See `common/types.xml` for details.
use serde::{Deserialize, Serialize};
use serde_repr::{Deserialize_repr, Serialize_repr};


/* It's the first type. */
#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct TypeFirst {
    pub value: i32,
    pub other: u32,
}


#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct TypeSecond {
    pub text: String,
    pub flags: MyEnum,
}


/* This struct has more complex members. */
#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct Complex {
    pub one: Vec<i32>,
    pub two: Option<String>,
    pub three: Option<Vec<TypeFirst>>,
}


/* It's my enum. */
#[derive(Serialize_repr, Deserialize_repr, Debug, PartialEq, Eq, Clone)]
pub enum MyEnum {
    One = 0,
    Two,
}
